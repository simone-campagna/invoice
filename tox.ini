[tox]
minversion = 1.8
envlist = py35-{test}

[project]
name = invoice

[base]
command_clean = {envpython} scripts/clean py:{toxinidir}/{[project]name}:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
command_create_coveragerc = {envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/QA/coverage%g'

[testenv]
deps = -r{toxinidir}/requirements/tests.txt
       -r{toxinidir}/requirements/install.txt
#sitepackages = False
whitelist_externals = mkdir
                      bash
                      sed
        
commands =
    test:       {[base]command_clean}
    test:       py.test --basetemp {envtmpdir} --doctest-modules tests
    #test:       py.test --basetemp {envtmpdir} --doctest-modules {[project]name}
    test:       {[base]command_clean}

    pylint:     {envpython} scripts/redirect -o file:{envdir}/QA/pylint.log -o stdout: -- {envbindir}/pylint --rcfile {toxinidir}/pylint.ini {[project]name}
    pylint:     {[base]command_clean}

    flake8:     {envpython} scripts/redirect -o file:{envdir}/QA/flake8.log -o stdout: -- {envbindir}/flake8 --format pylint --config {toxinidir}/flake8.ini {[project]name}
    flake8:     {[base]command_clean}

    coverage:   {[base]command_clean}
    coverage:   {[base]command_create_coveragerc}
    coverage:   coverage erase
    coverage:   py.test --cov {[project]name} --cov-report=html --cov-config={envdir}/tox.coveragerc
    coverage:   {[base]command_clean}

#            # cleaning source directories before the run
#            {envpython} scripts/clean py:{toxinidir}/invoice:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
#            # run tests and collect coverage information:
#            {envpython} scripts/redirect -o file:{envdir}/tox.coveragerc -e stderr: -- sed {toxinidir}/tests/.coveragerc -e 's%[ ]*directory[ ]*=.*%directory = '{envdir}'/docs/coverage/html%g'
#            coverage erase
#            py.test --cov invoice --cov-report=html --cov-config={envdir}/tox.coveragerc tests invoice
#            # cleaning source directories after the run
#            {envpython} scripts/clean py:{toxinidir}/invoice:inf py:{toxinidir}/tests:inf py:{toxinidir}:0 data:build data:dist
#            # run pylint:
#            {envpython} scripts/redirect -o file:{envdir}/docs/pylint/invoice.txt --force-returncode 0 -- {envbindir}/pylint --rcfile pylint.ini invoice
#            # run flake8:
#            {envpython} scripts/redirect -o file:{envdir}/docs/flake8/invoice.txt --force-returncode 0 -- {envbindir}/flake8 --format pylint --config flake8.ini invoice 
#            # build sphinx documentation:
#            sphinx-apidoc --force --separate -o {envdir}/docs/sphinx/source invoice
#            sphinx-build -b html -d {envdir}/docs/sphinx/_build {envdir}/docs/sphinx/source {envdir}/docs/sphinx/html


[pytest]
minversion = 2.5
addopts = -rsf --maxfail=3 -q --doctest-modules --ignore build --ignore dist
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL
